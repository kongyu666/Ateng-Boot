---
# 配置文件上传大小限制
spring:
  servlet:
    multipart:
      max-file-size: 200MB
      max-request-size: 200MB
---
# 日志配置
logging:
  level:
    root: @logging.level@
    com.example: DEBUG
  file:
    name: ./logs/${spring.application.name}.log
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 7
---
# redis 配置
spring:
  # 缓存Redis的相关配置
  data:
    redis:
      host: 192.168.1.10
      database: 93 # Redis数据库索引（默认为0）
      port: 42784 # Redis服务器连接端口
      password: Admin@123 # Redis服务器连接密码（默认为空）
      client-type: lettuce  # 默认使用Lettuce作为Redis客户端
      lettuce:
        pool:
          max-active: 1000 # 连接池最大连接数（使用负值表示没有限制）
          max-wait: -1s # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-idle: 100 # 连接池中的最大空闲连接
          min-idle: 0 # 连接池最小空闲连接数
          time-between-eviction-runs: 1s # 空闲对象逐出器线程的运行间隔时间.空闲连接线程释放周期时间
      timeout: 10000ms # 连接超时时间（毫秒）
    redis-dev:
      host: 192.168.1.10 # Redis服务器地址
      database: 94 # Redis数据库索引（默认为0）
      port: 42784 # Redis服务器连接端口
      password: Admin@123 # Redis服务器连接密码（默认为空）
      client-type: lettuce  # 默认使用Lettuce作为Redis客户端
      lettuce:
        pool:
          max-active: 1000 # 连接池最大连接数（使用负值表示没有限制）
          max-wait: -1s # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-idle: 100 # 连接池中的最大空闲连接
          min-idle: 0 # 连接池最小空闲连接数
          time-between-eviction-runs: 1s # 空闲对象逐出器线程的运行间隔时间.空闲连接线程释放周期时间
      timeout: 10000ms # 连接超时时间（毫秒）
---
spring:
  # 数据库的相关配置
  datasource:
    url: jdbc:postgresql://192.168.1.10:32297/ateng_boot?currentSchema=public&stringtype=unspecified  # 数据库连接URL
    username: postgres  # 数据库用户名
    password: Lingo@local_postgresql_5432  # 数据库密码
    driver-class-name: org.postgresql.Driver  # PostgreSQL数据库驱动类
    # driver-class-name: com.mysql.cj.jdbc.Driver  # MySQL数据库驱动类
    type: com.alibaba.druid.pool.DruidDataSource  # 使用Druid数据源
    # Druid连接池配置 https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
    druid:
      initial-size: 10  # 初始化连接池大小
      min-idle: 10  # 最小空闲连接数
      max-active: 1000  # 最大活跃连接数
      max-wait: 10000  # 获取连接的最大等待时间，单位毫秒
---
############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: token
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: false
---
# Actuator 监控端点的配置项
management:
  endpoints: # 配置Actuator端点的管理
    web:
      exposure: # 暴露端点
        include: 'health,shutdown'  # 包含所有端点，可以根据需要更改为具体的端点列表
        #include: '*'  # 包含所有端点，可以根据需要更改为具体的端点列表
  endpoint: # 配置各个端点的行为
    shutdown: # 关闭端点配置
      enabled: true # 启用shutdown端点，允许通过POST请求关闭应用程序
    health: # 健康检查端点配置
      #show-details: always # 显示完整的健康信息，包括详细的检查项
      show-details: never # 显示简短的健康信息
---
# 监控配置
spring.boot.admin.client:
  # 增加客户端开关
  enabled: false
  # 设置 Spring Boot Admin Server 地址
  url: http://dev.monitor-admin3.lingo.local/admin
  instance:
    service-host-type: IP
  username: admin
  password: Admin@123
---